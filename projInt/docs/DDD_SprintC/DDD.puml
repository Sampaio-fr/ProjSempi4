@startuml
'https://plantuml.com/class-diagram

hide field
hide methods

title Domain Driven Design

skinparam linetype ortho

rectangle "<<Aggregate>> User" #bbaabb{

    entity User<<Root>><<Entity>><<Strategy>>
    object BirthDate<<Value Object>>
    object TaxNumber<<Value Object>><<Id>>
    object FullName<<Value Object>>
    object ShortName<<Value Object>>

    User"1" -up-> "1"BirthDate : has a
    User"1" -left-> "1"TaxNumber : has a
    User"1" --> "1" FullName : has a
    User "1" -up->"1"ShortName : has a
}

rectangle "<<Aggregate>> TimeTable" #bbaabb{

    entity TimeTable <<Root>><<Entity>>

}


rectangle "<<Aggregate>> Schedule" #darkcyan{

 entity Schedule<<Root>><<Entity>>
 object DateTime<<Value Object>>
 object Duration<<Value Object>>

 Schedule "1"-->"1" DateTime: has a
 Schedule "1"-->"1" Duration: has a
}

TimeTable"1"-->"*"Schedule: has many

rectangle "<<Aggregate>> Questions" #turquoise{

     entity Question <<Root>><<Entity>>
     object QuestionType <<Value Object>>
     object Answer <<Value Object>>

     Question "1"-->"1" QuestionType: is of a
     Question "1"-->"1"Answer: has one
}


rectangle "<<Aggregate>> Teacher" #blueviolet{

    entity Teacher<<Entity>><<Root>>
    object Acronym<<Value Object>>

    Teacher -up|> User: is a
    Teacher"1" --> "1"Acronym : has a
}



rectangle "<<Aggregate>> Class" #deepskyblue{

 entity Class<<Root>><<Entity>>
 object ClassTitle<<value Object>>
 object ClassType<<Value Object>>

 Class "1"-->"1" ClassTitle: has a
 Class "1"-->"1"  ClassType: is of a
 Class "1"-->"1...*" Schedule: has a
}
rectangle "<<Aggregate>> Cell" #aaabbb{
     entity Cell <<Entity>><<Root>>
     object Number <<Value Object>>
     object Title <<Value Object>>
     object Column <<Value Object>>
     object Row <<Value Object>>

         Column "1"-right->"1" Number : has
         Column "1"-->"1" Title : has
         Row "1"-left->"1" Number : has
         Row "1"-->"1" Title : has
             Cell"1"-->"1" Row : has a Posx
             Cell"1"-->"1"Column : has a Posy
}
rectangle "<<Aggregate>> Cell Log" #strategy{
     entity CellLog <<Entity>><<Root>>
    object CellDate <<Value Object>>
    CellLog"1"-->"1"CellDate
}
   CellLog"1"-->"Cell": has

rectangle "<<Aggregate>> Shared Board" #business{

    entity SharedBoard<<Root>><<Entity>>
    object OwnerSharedBoard <<Value Object>>
    object SharedBoardTitle <<Value Object>>

    object SharedBoardState <<Value Object>>


    SharedBoard"1"-->"1"OwnerSharedBoard: has a
    SharedBoard"1"-up->"1"SharedBoardTitle : has a

    SharedBoard"1"-->"1" SharedBoardState : has a

    User"1"->"1"OwnerSharedBoard: is a

    SharedBoard"1"-->"*"Cell : has a position

}
rectangle "<<Aggregate>> Shared Board Log" #motivation{
    entity SharedBoardLog<<Entity>><<Root>>
    object SharedBoardStateLog <<Value Object>>
    object BoardDate <<Value Object>>
    SharedBoardLog"1"-->"1"SharedBoardStateLog: has a
    SharedBoardLog"1"-->"1"BoardDate: has a


}
    SharedBoardLog"1"-->"*"CellLog : has many
    SharedBoardLog"*"<--"1"SharedBoard: has a

rectangle "<<Aggregate>> PostIt" #gold{

    object Author <<Value Object>>
    object Content <<Value Object>>
    object TimeStamp <<Value Object>>
    entity PostIt <<Entity>><<Root>>

     PostIt"1"-->"1"TimeStamp: has
     PostIt"1"-->"1"Content : has
     PostIt"1"-->"1"Author : has a
     Cell"1"-->"1"PostIt : PosPost
}

rectangle "<<Aggregate>> PostIt Log" #implementation{
       entity PostItLog<<Entity>><<Root>>
       object PostItDate<<Value Object>>
       object PostItTitle<<Value Object>>
       object PostItDescription<<Value Object>>
       object PostItStateLog<<Value Object>>

       PostItLog"1"-->"1"PostItDate: has a
       PostItLog"1"-->"1"PostItTitle: has a
       PostItLog"1"-->"1"PostItDescription: has a
       PostItLog"1"-->"1"PostItStateLog: has a


}
   PostItLog"1"-->"1"PostIt
   PostItLog"1"-->"1"Cell
   CellLog"1"-->"*"PostItLog: has many


rectangle "<<Aggregate>> Course" #lightskyblue{

    entity Course<<Root>><<Entity>>
    object CourseState<<Value Object>>
    object CourseEnrollmentState <<Value Object>>
    object Edition <<Value Object>><<Identify>>
    object CourseDescription <<Value Object>>
    object CourseTitle <<Value Object>>

    Course"1" --> "1"CourseTitle: has a
    Course"1" --> "1"CourseDescription : has a
    Course"1"-->"1"CourseState : has a
    Course"1"-->"1"CourseEnrollmentState: has an
    Course"1" -->"1"Edition : has a
    Course"1" -->"*"Teacher: has many
    Course"1" --->"1"Teacher: has one in charge
    Course"1" -->"*"ExamFormative: has many
}

rectangle "<<Aggregate>> Exam" #EB937F  {
    entity Exam <<Root>><<Entity>>
    object ExamTitle<<Value Object>>



        object FeedBackType <<Value Object>>
        object GradeType <<Value Object>>
        object ExamStruct<<Value Object>>

    object ExamState <<Value Object>>


    Exam"1"-->"1"ExamTitle : needs
    Exam"1"-->"1"ExamState : has a
    Exam"1"-->"1"FeedBackType: has a
    Exam"1"-->"1"GradeType: has a
    Exam"1"-->"0..1"ExamStruct: contains
    Exam "1"-->"1" Schedule: has a

}

rectangle "<<Aggregate>> Section" #indianRed{
    entity Section<<Root>><<Entity>>
    object SectionDescription<<ValueObject>>


    Section"1"-->"1...*"Question: contains >
    Section"1"-->"0..1"SectionDescription: has  a>
}
rectangle "<<Aggregate>> ExamFormative"#b8e0c5  {
    entity ExamFormative <<Root>><<Entity>>
    object ExamFormativeTitle<<Value Object>>
    object ExamFormativeType <<Value Object>>

    entity FormativeHeader
        object FormativeFeedBackType <<Value Object>>
        object FormativeGradeType <<Value Object>>
        object ExamFormativeDescription<<Value Object>>

    object ExamFormativeState <<Value Object>>

    ExamFormative "1"--->"1"FormativeHeader: has a
    ExamFormative"1"-->"1"ExamFormativeType: is of an
    ExamFormative"1"-->"1"ExamFormativeTitle : needs
    ExamFormative"1"-->"1"ExamFormativeState : has a
    FormativeHeader"1"-->"1"FormativeFeedBackType: has a
    FormativeHeader"1"-->"1"FormativeGradeType: has a
    FormativeHeader"1"-->"0..1"ExamFormativeDescription: contains
    ExamFormative "1"-->"1" Schedule: has a
}




rectangle "<<Aggregate>> Student" #hotpink{

    entity Student<<Entity>><<Root>>
    object MechanographicNumber<<Value Object>>

    Student -up|> User
    Student "1" -->"1"MechanographicNumber: has a
    Student "1" -->"1..*"Grade: has many

}

rectangle "<<Aggregate>> Grade" #hotpink{

    entity Grade<<Entity>><<Root>>
    Object TotalGrade<<Value Object>>
    Object ParcialGrade<<Value Object>>

     Grade "1" -->"1" TotalGrade : has a
      Grade "1" -->"1" ParcialGrade : has a
    Grade "1" -->"1..*" Course
    Grade "1" -->"1" Exam


}


rectangle "<<Aggregate>> Meeting" #limegreen{

    entity Meeting<<Root>><<Entity>>
    object MeetingState<<Value Object>>
    Meeting "1"-->"1"MeetingState: has a
}

rectangle "<<Aggregate>> Notification" #lightpink{

    entity Notification<<Root>><<Entity>>
    object TypeOfNotification<<Value Object>>
    object NotificationDescription<<Value Object>>
    Notification "1"-->"1" TypeOfNotification: has a
    Notification "1"--->"1" NotificationDescription : has a
    Class "1"-up->"1...*" Notification: originates
}

rectangle "<<Aggregate>> Invitation" #wheat{
    entity Invitation<<Entity>><<Root>>
    object InvitationState<<Value Object>>
    Meeting"1"-->"1"Invitation

    Invitation "1"-->"1" InvitationState: has a
    Invitation "1...*"-->"1" User: is sent to
    Invitation "1"-->"1" Notification: generates
}


rectangle "<<Aggregate>> Permission" #greenyellow{

    entity Permission<<Root>><<Entity>>
    object AccessLevel<<Value Object>>
    Permission"1"-->"1"AccessLevel :  has  a
}


rectangle "<<Aggregate>> Enrollment" #slategrey {

    entity Enrollment
    object EnrollmentState<<Value Object>>
     
     Enrollment"1"-->"1"EnrollmentState : has an
}

rectangle "<<Aggregate>> EnrollmentApprovation" #slategrey {

    entity EnrollmentApprovation
    object Justification<<Value Object>>

     EnrollmentApprovation"1"-->"1"Justification: has an
     EnrollmentApprovation"1"-->"1..*"Enrollment: approves
}


Student "1"<--"1...*" Enrollment : makes an >
Enrollment "1"-->"1" Course : is related to a >
    Course "1"-up->"*"Exam : is related to
    SharedBoard"1"-->"1"Notification : when updated sends
    Notification "1"-up->"1...*" User : Informs
    SharedBoard"1"-->"1"Permission : gives
    Permission "1"-->"1...*" User : is associated to
    Meeting"1"-->"1"Schedule : has a
    ExamFormative"1"-->"1...*"Section : contains >

User"1"-->"1"TimeTable: has
Course"1"-->"1"TimeTable: has
@enduml

