@startuml


skinparam defaultFontName FG Virgil

class Teacher {
    -id: int
    -name: string
    -email: string
}

class UpdateFormativeExamUI {
    +listCourses(): List<Course>
    +findExams(updated: boolean): List<Exam>
    +saveUpdatedExam(examUpdated: Exam): void
    +createExamFromPath(path: string, selectedCourse: Course): void
    +informOperationResult(success: boolean): void
}

class UpdateFormativeExamController {
     -examManagementService: ExamManagementService
     +listCourses(): List<Course>
     +findExams(updated: boolean): List<Exam>
     +updateExam(exam: Exam, path: string): void
     +saveExam(selectedCourse: Course, exam: Exam): void
     +createExamFromPath(path: string, selectedCourse: Course): void
}

class ExamManagementService {
    -examRepository: ExamRepository
    -teacherRepository: TeacherRepository
    -courseRepository: CourseRepository
    +listCourses(): List<Course>
    +findExams(updated: boolean): List<Exam>
    +validateExam(path: string): boolean
    +readFileToString(path: string): string
    +saveExamOnly(exam: Exam): void
    +saveExam(selectedCourse: Course, exam: Exam): void
    +createExamFromPath(path: string, selectedCourse: Course): void}
}
class AuthzRegistry {
+authorizationService(): void
}

class Exam {
    -id: int
    -type: ExamType
    -text: string
    -course: Course
    -teacher: Teacher
}

class Course {
    -id: int
    -name: string
}

Interface PersistenceContext {
    +getRepositoryFactory(): RepositoryFactory
}

Interface RepositoryFactory {
    +courseRepository(): CourseRepository
    +examRepository(): ExamRepository
    +teacherRepository(): TeacherRepository
}

Interface ExamRepository {
    +save(exam: Exam): void
}

Interface TeacherRepository {
    +findTeacherByEmail(email: string): Teacher
}

Interface CourseRepository {
    +save(course: Course): void
}

class JPAExamRepository {
    +save(exam: Exam): void
}

class JPATeacherRepository {
    +findTeacherByEmail(email: string): Teacher
}

class JPACourseRepository {
    +save(course: Course): void
}

UpdateFormativeExamUI ..> UpdateFormativeExamController
UpdateFormativeExamController --> ExamManagementService

ExamManagementService --> AuthzRegistry
ExamManagementService --> PersistenceContext

ExamManagementService --> Course
ExamManagementService --> Exam
ExamManagementService --> Teacher
PersistenceContext --> RepositoryFactory

RepositoryFactory --> ExamRepository
RepositoryFactory --> TeacherRepository
RepositoryFactory --> CourseRepository


ExamRepository --> JPAExamRepository
TeacherRepository --> JPATeacherRepository
CourseRepository --> JPACourseRepository
@enduml
